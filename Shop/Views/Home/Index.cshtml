@model IEnumerable<Shop.Models.Product>

@{
    ViewData["Title"] = "Главная";

    string GetVotesText(int votes)
    {
        if (votes == 0) return "Нет голосов";

        int lastTwo = votes % 100;
        int lastOne = votes % 10;

        if (lastTwo >= 11 && lastTwo <= 19) return $"{votes} голосов";

        return lastOne switch
        {
            1 => $"{votes} голос",
            2 or 3 or 4 => $"{votes} голоса",
            _ => $"{votes} голосов"
        };
    }
}

<div class="container-fluid mb-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <h5 class="card-title mb-3">Фильтры товаров</h5>
            <form method="get" asp-controller="Home" asp-action="Index" class="row g-3" id="filterForm">
                <!-- Первая строка фильтров -->
                <div class="col-md-4">
                    <label class="form-label">Название</label>
                    <select name="name" class="form-select" id="nameInput">
                        @{
                            var selectedName = ViewBag.SelectedName as string;
                            var names = ViewBag.Names as List<string>;

                            if (string.IsNullOrEmpty(selectedName))
                            {
                                @:
                                <option value="" selected>Всё</option>
                            }
                            else
                            {
                                @:
                                <option value="">Всё</option>
                            }

                            if (names != null)
                            {
                                foreach (var name in names)
                                {
                                    if (selectedName == name)
                                    {
                                        @:
                                        <option value="@name" selected>@name</option>
                                    }
                                    else
                                    {
                                        @:
                                        <option value="@name">@name</option>
                                    }
                                }
                            }
                        }
                    </select>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Категория</label>
                    <select name="category" class="form-select" id="categoryInput">
                        @{
                            var selectedCategory = ViewBag.SelectedCategory as string;
                            var categories = ViewBag.Categories as List<string>;

                            if (string.IsNullOrEmpty(selectedCategory))
                            {
                                @:
                                <option value="" selected>Всё</option>
                            }
                            else
                            {
                                @:
                                <option value="">Всё</option>
                            }

                            if (categories != null)
                            {
                                foreach (var category in categories)
                                {
                                    if (selectedCategory == category)
                                    {
                                        @:
                                        <option value="@category" selected>@category</option>
                                    }
                                    else
                                    {
                                        @:
                                        <option value="@category">@category</option>
                                    }
                                }
                            }
                        }
                    </select>
                </div>

                <!-- Вторая строка фильтров -->
                <div class="col-md-2">
                    <label class="form-label">Цена от</label>
                    <input type="number" name="minPrice" class="form-control" placeholder="@ViewBag.MinPriceRange"
                           value="@ViewBag.MinPrice" min="@ViewBag.MinPriceRange" max="@ViewBag.MaxPriceRange" id="minPriceInput"
                           step="0.01" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Цена до</label>
                    <input type="number" name="maxPrice" class="form-control" placeholder="@ViewBag.MaxPriceRange"
                           value="@ViewBag.MaxPrice" min="@ViewBag.MinPriceRange" max="@ViewBag.MaxPriceRange" id="maxPriceInput"
                           step="0.01" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Рейтинг от</label>
                    <input type="number" name="minRating" class="form-control" placeholder="@ViewBag.MinRatingRange"
                           value="@ViewBag.MinRating" min="0" max="5" id="minRatingInput"
                           step="0.1" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Рейтинг до</label>
                    <input type="number" name="maxRating" class="form-control" placeholder="@ViewBag.MaxRatingRange"
                           value="@ViewBag.MaxRating" min="0" max="5" id="maxRatingInput"
                           step="0.1" />
                </div>

                <!-- Кнопка Применить - выровнена по правому краю -->
                <div class="col-md-12 d-flex justify-content-end">
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary w-100">Применить</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="container-fluid">
    @if (Model.Any())
    {
        var groupedProducts = Model.GroupBy(p => p.Category)
        .OrderBy(g => g.Key);

        @foreach (var categoryGroup in groupedProducts)
        {
            <div class="mb-4">
                <h3 class="mb-3 border-bottom pb-2">@categoryGroup.Key</h3>

                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
                    @foreach (var product in categoryGroup)
                    {
                        <div class="col">
                            <div class="card h-100 shadow-sm">
                                <div class="position-relative">
                                    <img src="/images/Products/@product.Image" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: contain; background: #f8f9fa;">

                                    @if (ViewBag.CartProductIds != null && ViewBag.CartProductIds.Contains(product.Id))
                                    {
                                        var quantityInCart = ViewBag.CartQuantities != null && ViewBag.CartQuantities.ContainsKey(product.Id)
                                        ? ViewBag.CartQuantities[product.Id]
                                        : 0;

                                        <span class="position-absolute top-0 start-0 bg-warning text-dark px-2 py-1 m-1 small rounded">
                                            В корзине (@quantityInCart)
                                        </span>
                                    }

                                    @if (product.StockQuantity > 0)
                                    {
                                        <span class="position-absolute top-0 end-0 bg-success text-white px-2 py-1 m-1 small rounded">В наличии</span>
                                    }
                                    else
                                    {
                                        <span class="position-absolute top-0 end-0 bg-danger text-white px-2 py-1 m-1 small rounded">Нет в наличии</span>
                                    }
                                </div>

                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@product.Name</h5>

                                    <div class="mb-2 d-flex justify-content-between align-items-center">
                                        <div>
                                            @{
                                                int fullStars = (int)Math.Floor(product.AverageRating);
                                                bool halfStar = (product.AverageRating - fullStars) >= 0.5;
                                            }
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= fullStars)
                                                {
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                }
                                                else if (i == fullStars + 1 && halfStar)
                                                {
                                                    <i class="bi bi-star-half text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-star text-warning"></i>
                                                }
                                            }
                                        </div>
                                        <div class="text-muted small">
                                            @GetVotesText(product.TotalVotes)
                                        </div>
                                    </div>


                                    <p class="card-text flex-grow-1">
                                        @(product.Description.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)
                                    </p>

                                    <div class="d-flex justify-content-between align-items-center mt-auto">
                                        <h5 class="mb-0 text-primary">@product.Price руб.</h5>
                                        <div class="btn-group">
                                            <a href="/Home/Details?id=@product.Id" class="btn btn-sm btn-outline-secondary">Подробнее</a>
                                            @if (product.StockQuantity > 0)
                                            {
                                                <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                                    <input type="hidden" name="productId" value="@product.Id" />
                                                    <button type="submit" class="btn btn-sm btn-success">Купить</button>
                                                </form>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

            </div>
        }
    }
    else
    {
        <div class="text-center py-5">
            <h4 class="text-muted">Товары не найдены</h4>
            <p class="text-muted">Попробуйте изменить параметры поиска</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('filterForm');
            const nameInput = document.getElementById('nameInput');
            const categoryInput = document.getElementById('categoryInput');
            const minPriceInput = document.getElementById('minPriceInput');
            const maxPriceInput = document.getElementById('maxPriceInput');
            const minRatingInput = document.getElementById('minRatingInput');
            const maxRatingInput = document.getElementById('maxRatingInput');

            [nameInput, categoryInput, minPriceInput, maxPriceInput, minRatingInput, maxRatingInput].forEach(input => {
                input.addEventListener('change', function () {
                    form.submit();
                });
            });

            minPriceInput.addEventListener('change', function () {
                if (parseFloat(this.value) > parseFloat(maxPriceInput.value)) {
                    maxPriceInput.value = this.value;
                }
            });

            maxPriceInput.addEventListener('change', function () {
                if (parseFloat(this.value) < parseFloat(minPriceInput.value)) {
                    minPriceInput.value = this.value;
                }
            });

            minRatingInput.addEventListener('change', function () {
                if (parseFloat(this.value) > parseFloat(maxRatingInput.value)) {
                    maxRatingInput.value = this.value;
                }
            });

            maxRatingInput.addEventListener('change', function () {
                if (parseFloat(this.value) < parseFloat(minRatingInput.value)) {
                    minRatingInput.value = this.value;
                }
            });
        });
    </script>
}