@model IEnumerable<Shop.Models.Product>

@{
    ViewData["Title"] = "Управление товарами";
}

<div class="container my-4">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Админ-панель: Товары</h2>
        <div class="btn-group">
            <a asp-controller="Account" asp-action="AdminUsers" class="btn btn-outline-dark">Пользователи</a>
            <a asp-controller="Account" asp-action="AdminOrders" class="btn btn-outline-dark">Заказы</a>
            <a asp-controller="Account" asp-action="AddProduct" class="btn btn-dark">Добавить товар</a>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Фильтр товаров</h5>
                    <form method="get" id="filterForm">
                        <div class="mb-3">
                            <label class="form-label">Название</label>
                            <select name="name" class="form-select" id="nameInput">
                                @{
                                    var selectedName = ViewBag.SelectedName as string;
                                    var names = ViewBag.Names as List<string>;

                                    if (string.IsNullOrEmpty(selectedName))
                                    {
                                        <option value="" selected>Всё</option>
                                    }
                                    else
                                    {
                                        <option value="">Всё</option>
                                    }

                                    if (names != null)
                                    {
                                        foreach (var name in names)
                                        {
                                            if (selectedName == name)
                                            {
                                                <option value="@name" selected>@name</option>
                                            }
                                            else
                                            {
                                                <option value="@name">@name</option>
                                            }
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Категория</label>
                            <select name="category" class="form-select" id="categoryInput">
                                @{
                                    var selectedCategory = ViewBag.SelectedCategory as string;
                                    var categories = ViewBag.Categories as List<string>;

                                    if (string.IsNullOrEmpty(selectedCategory))
                                    {
                                        <option value="" selected>Всё</option>
                                    }
                                    else
                                    {
                                        <option value="">Всё</option>
                                    }

                                    if (categories != null)
                                    {
                                        foreach (var category in categories)
                                        {
                                            if (selectedCategory == category)
                                            {
                                                <option value="@category" selected>@category</option>
                                            }
                                            else
                                            {
                                                <option value="@category">@category</option>
                                            }
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="d-flex mb-3 gap-2">
                            <div class="flex-grow-1">
                                <label class="form-label">Цена от</label>
                                <input type="number" name="minPrice" class="form-control" placeholder="Мин. цена"
                                       value="@ViewBag.MinPrice" min="@ViewBag.MinPriceRange" max="@ViewBag.MaxPriceRange"
                                       step="0.01" />
                            </div>
                            <div class="flex-grow-1">
                                <label class="form-label">Цена до</label>
                                <input type="number" name="maxPrice" class="form-control" placeholder="Макс. цена"
                                       value="@ViewBag.MaxPrice" min="@ViewBag.MinPriceRange" max="@ViewBag.MaxPriceRange"
                                       step="0.01" />
                            </div>
                        </div>
                        <button type="submit" class="btn btn-dark w-100">Применить</button>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="table-responsive shadow-sm">
                <table class="table table-striped table-hover align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>#</th>
                            <th>Название</th>
                            <th>Категория</th>
                            <th>Описание</th>
                            <th>Картинка</th>
                            <th>Цена</th>
                            <th>Кол-во</th>
                            <th>Действия</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>@product.Id</td>
                                <td>@Html.Raw(TruncateText(product.Name, 25))</td>
                                <td>@product.Category</td>
                                <td>@Html.Raw(TruncateText(product.Description, 30))</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(product.Image))
                                    {
                                        <img src="~/images/Products/@product.Image" alt="@product.Name" style="width: 50px; height: 50px; object-fit: cover;" class="rounded" />
                                    }
                                    else
                                    {
                                        <span class="text-muted">Нет изображения</span>
                                    }
                                </td>
                                <td>@product.Price р.</td>
                                <td>@product.StockQuantity</td>
                                <td class="text-center">
                                    <div class="d-grid gap-2">
                                        <button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" onclick="setDeleteId('@product.Id')">
                                            Удалить
                                        </button>
                                        <form asp-action="EditProduct" asp-controller="Account" method="get">
                                            <input type="hidden" name="id" value="@product.Id" />
                                            <button type="submit" class="btn btn-sm btn-warning">Изменить</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Подтверждение удаления</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body">
                Вы уверены, что хотите удалить этот товар?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="DeleteProduct" method="post">
                    <input type="hidden" id="deleteProductId" name="id" />
                    <button type="submit" class="btn btn-danger">Удалить</button>
                </form>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
            </div>
        </div>
    </div>
</div>

@functions {
    public string TruncateText(string text, int maxLength)
    {
        if (string.IsNullOrEmpty(text)) return "";
        return text.Length > maxLength ? text.Substring(0, maxLength) + "..." : text;
    }
}

@section Scripts {
    <script>
        function setDeleteId(productId) {
            document.getElementById('deleteProductId').value = productId;
        }


        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('filterForm');
            const nameInput = document.getElementById('nameInput');
            const categoryInput = document.getElementById('categoryInput');
            const minPriceInput = document.getElementById('minPriceInput');
            const maxPriceInput = document.getElementById('maxPriceInput');

            [nameInput, categoryInput, minPriceInput, maxPriceInput].forEach(input => {
                input.addEventListener('change', function () {
                    form.submit();
                });
            });

            minPriceInput.addEventListener('change', function () {
                if (parseFloat(this.value) > parseFloat(maxPriceInput.value)) {
                    maxPriceInput.value = this.value;
                }
            });

            maxPriceInput.addEventListener('change', function () {
                if (parseFloat(this.value) < parseFloat(minPriceInput.value)) {
                    minPriceInput.value = this.value;
                }
            });
        });

    </script>
}
